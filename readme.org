#+Title: My Master's Code
Pricing is responsible for solving to optimal.
Branchins is the one aiming for feasability.
Once we find a feasible, that's a upper bound.

algo que constantemente eu me confundo:
- eu não dou branch num nó que me deu uma resposta maior que o UB
- Se a solução que eu encontrei é inteira, esse é um novo UB para aquele lado da árvore.
- Para eu determinar qual é o melhor para aquela subtree, eu tenho que resolver todos os ramos dela.


* Tarefas:
** TODO Ao desfazer um contract, dá para percorrer os independent sets e adicionando o cara que tá voltando quando der.


* Instances
All the instances used are under the folder =inst=. The subfolder are used to specify where they were obtained:
- =cmu= https://mat.tepper.cmu.edu/COLOR/instances.html
- =hugo= https://www.cs.upc.edu/~hhernandez/graphcoloring/home.html
- =cedric= http://cedric.cnam.fr/~porumbed/graphs/

* About maximal independent sets
We only care about maximal (insertion-wise) independent sets.
If we find a feasible solution with only maximal independent sets, it may have some vertices in more then one set.
We can obtain a solution without that fact heuristically and keeping the number of sets.
When making sure no set violates the constrains in the dual program, we can be sure that if no maximal independent set can, so does every other independent set.
